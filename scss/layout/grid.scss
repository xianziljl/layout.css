@import '../variable';

.row{display: grid;grid-auto-flow: row;}
.col{display: grid;grid-auto-flow: column;}
.irow{display: inline-grid;grid-auto-flow: row;}
.icol{display: inline-grid;grid-auto-flow: column;}

.ass{align-self: start;}
.asc{align-self: center;}
.ase{align-self: end;}

.jss{justify-self: start;}
.jsc{justify-self: center;}
.jse{justify-self: end;}

@for $n from 1 through $grid-max {
  .rows-#{$n}{grid-template-rows: repeat(#{$n}, 1fr);}
  .cols-#{$n}{grid-template-columns: repeat(#{$n}, 1fr);}

  .row-#{$n}{grid-row: span #{$n};}
  .col-#{$n}{grid-column: span #{$n};}

  .rs-#{$n}{grid-row-start: $n;}
  .cs-#{$n}{grid-column-start: $n;}
}

$step: $grid-gap-step;
$unit: $grid-gap-unit;
$max: $grid-gap-max / $step;

@for $i from 0 through $max {
  $num: $i * $step;
  .gap-#{$i}{grid-gap: #{$num}#{$unit};gap: #{$num}#{$unit}}
  .gapr-#{$i}{grid-row-gap: #{$num}#{$unit};row-gap: #{$num}#{$unit}}
  .gapc-#{$i}{grid-column-gap: #{$num}#{$unit};column-gap: #{$num}#{$unit}}
}

// $arr: ();
// @for $i from 1 through $n{
//   $arr: append($arr, 1fr);
// }